dist: trusty
sudo: required
language: bash
before_install:
- curl https://raw.githubusercontent.com/express42/otus-homeworks/2019-02/run.sh |
  bash
script:
  - echo "packer validate"
  - docker exec -e USER=appuser hw-test bash -c 'cp packer/vriables.json.example packer/variables.json'
  - docker exec -e USER=appuser hw-test bash -c 'packer validate -var-file=packer/variables.json packer/app.json'
  - docker exec -e USER=appuser hw-test bash -c 'packer validate -var-file=packer/variables.json packer/db.json'
  - docker exec -e USER=appuser hw-test bash -c 'packer validate -var-file=packer/variables.json packer/immutable.json'
  - docker exec -e USER=appuser hw-test bash -c 'packer validate -var-file=packer/variables.json packer/ubuntu16.json'
  - echo "terraform validate"
  - docker exec -e USER=appuser hw-test bash -c 'cp terraform/terraform.tfvars.example terraform/terraform.tfvars'
  - docker exec -e USER=appuser hw-test bash -c 'cp terraform/prod/terraform.tfvars.example terraform/prod/terraform.tfvars'
  - docker exec -e USER=appuser hw-test bash -c 'cp terraform/stage/terraform.tfvars.example terraform/stage/terraform.tfvars'
  - docker exec -e USER=appuser hw-test bash -c 'touch terraform/stage/terraform.tfstate'
  - docker exec -e USER=appuser hw-test bash -c 'touch terraform/prod/terraform.tfstate'
  - docker exec -e USER=appuser hw-test bash -c 'touch /root/.ssh/appuser.pub'
  - docker exec -e USER=appuser hw-test bash -c 'touch /root/.ssh/appuser'
  - docker exec -e USER=appuser hw-test bash -c 'rm -rf terraform/stage/backend.tf'
  - docker exec -e USER=appuser hw-test bash -c 'rm -rf terraform/prod/backend.tf'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/ && terraform init'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/ && terraform validate'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/stage/ && terraform get'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/stage/ && terraform init'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/stage/ && terraform validate'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/prod/ && terraform get'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/prod/ && terraform init'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/prod/ && terraform validate'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/ && tflint'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/stage/ && tflint'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/prod/ && tflint'
  - echo "ansible-lint"  
  - docker exec -e USER=appuser hw-test bash -c 'cd ansible/playbooks && ansible-lint ./*'
notifications:
  slack:
    rooms:
      secure: jsqzn7MLpujVMCb+s0Gk8cX0D1QXMQQFC37W7D2iotatDO/EsqnXz4hYB7vQgR/VZVyxfRniijYRF5nuod7jnthNYNKuNQ1fC6m3V4TSKNZwPkq1WfWymU6v9yf6wlwgvGRn8DAeJ/ie873qMwIs2l6W3w7/4yqXy4t3vKZGGlsZ64aO8gEpw92cKLG4ABTViR8J1tSwmoVFdi/JyjlX2BZE8egqsjMtJShiebo7hSSLKnQ3jeDJ9E3eqD/nciIiqbEwaJpWFGEUUDUODQTOReMrJ+D0tsBXh61PfI5ILWiuMcR1105UIT2crdcKa1r1Doh8HEBS1Y4HE8i3FF5KHdfcmDlpVrmYQlRE592/SIUSOtNcpqBB0Zy0+fpAQhYQkjuZIK/fIwki7riK/GIuU/+iCb9OuaythDClQjS/b4DL2Qtxsli8p29QwAMHYB4BzeUUqS2m3nucdM55QroUTn+7+866JfXxkIQoZj0oFvK1JUB4pU+Cg/roMQOwaiZQNZjTAvkYPVyofw9r4HzPVsFC76+vkp7UPOKWos6OgSvy2miU7AHVvEsbbxr2qgijtSoNM7oQKoNWQx0F7Wwt1FZEP8h4Gf9pyFT12m/1G6GLg+sLPziBr04s3Izsl8Cn4Ps14s3LKxOUEmDdmxA4TnoC+gcxKcNDTTrYdMN4B0A=
